interface Vector3f
{
	method print (Printer printer)
}

class Vector3fStruct
{
	float { x y z } = 0

	method print (Printer printer) using new TextWriter(printer) as writer
	{
		writer.write { "(" x ", " y ", " z ")" }
	}

	method { (add (a + b)) (sub (a - b)) } as (name operation) name (Vector3fStruct v)
	{
		new Vector3f(using { { x v.x } { y v.y } { z v.z } } as { a b } operation)		
	}
}

// result code

class Vector3fStruct
{
	float x = 0
	float y = 0
	float z = 0

	method print (Printer printer) using new TextWriter(printer) as writer
	{
		writer.write "("
		writer.write x
		writer.write ", "
		writer.write y
		writer.write ", "
		writer.write z
		writer.write ")"
	}

	method add (Vector3fStruct v)
	{
		new Vector3f((x + v.x) (y + v.y) (z + v.z))
	}

	method sub (Vector3fStruct v)
	{
		new Vector3f((x - v.x) (y - v.y) (z - v.z))
	}
}

*********************************
CONCEPT :

x { a b c }

where
parent x
	children a, b, c

the same as

x a x b x c
or
x a
x b
x c