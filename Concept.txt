class Vector3fStruct
{
	float { x y z } = 0

	method print Printer as printer using new TextWriter(printer) as writer
	{
		writer.write { "(" x ", " y ", " z ")" }
	}
}

interface Vector3f
{
	calculate Vector3fAction
}

interface Vector3fAction
{
	call (float float float)
}

class
{
	(Vector3fAdd (a + b))
	(Vector3fSub (a - b))
	(Vector3fMul (a * b))
	(Vector3fDiv (a / b))
}
as (name operation) name
{
	Vector3f { a b }

	constructor (Vector3f Vector3f) as (a b)
	{
		{ a b } as f this.f = f
	}

	method calculate Vector3fAction as action
	{
		a.calculate((ax ay az) -> b.calculate((bx by bz) -> action({ (ax bx) (ay by) (az bz) } as (a b) operation)))
	}
}

// result code

class Vector3fStruct
{
	float x = 0
	float y = 0
	float z = 0

	method print (Printer printer) using new TextWriter(printer) as writer
	{
		writer.write "("
		writer.write x
		writer.write ", "
		writer.write y
		writer.write ", "
		writer.write z
		writer.write ")"
	}
}

*********************************
CONCEPT :

x { a b c }

where
parent x
	children a, b, c

the same as

x a x b x c
or
x a
x b
x c